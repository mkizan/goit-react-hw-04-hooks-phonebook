{"version":3,"sources":["components/Container/Container.module.scss","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","style.module.scss"],"names":["module","exports","Container","children","className","styles","ContactForm","props","useState","stateName","setStateName","stateNumber","setStateNumber","form","onSubmit","event","preventDefault","contacts","find","contact","name","toLowerCase","alert","number","label","type","input","pattern","value","onChange","target","title","placeholder","autoComplete","required","btn","Filter","ContactList","list","map","id","list__item","onClick","onDeleteContacts","App","stateContacts","setStateContacts","stateFilter","setStateFilter","useEffect","savedContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","title__phonebook","data","nanoid","prevState","title__contacts","console","log","filter","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a054c6e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","import styles from './Container.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={styles.Container}>{children}</div>;\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nexport default function ContactForm(props) {\n  const [stateName, setStateName] = useState('');\n  const [stateNumber, setStateNumber] = useState('');\n\n  const handleInputChangeName = event => {\n    setStateName(event.target.value);\n  };\n\n  const handleInputChangeNumber = event => {\n    setStateNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      props.contacts.find(\n        contact => contact.name.toLowerCase() === stateName.toLowerCase(),\n      )\n    ) {\n      return alert(`${stateName} is already in contacts`);\n    }\n    props.onSubmit({ name: stateName, number: stateNumber });\n    setStateName('');\n    setStateNumber('');\n  };\n\n  ContactForm.propTypes = {\n    stateName: PropTypes.string.isRequired,\n    stateNumber: PropTypes.string.isRequired,\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          type=\"text\"\n          className={styles.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={stateName}\n          onChange={handleInputChangeName}\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          type=\"tel\"\n          className={styles.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={stateNumber}\n          onChange={handleInputChangeNumber}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Enter your phone number\"\n          autoComplete=\"on\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={styles.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import styles from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        placeholder=\"Find your contact\"\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import styles from './ContactList.module.scss';\n\nconst ContactList = props => {\n  return (\n    <ul className={styles.list}>\n      {props.contacts.map(({ name, number, id }) => {\n        return (\n          <li className={styles.list__item} key={id}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              className={styles.btn}\n              onClick={() => props.onDeleteContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n// const ContactList = ({ contacts, onDeleteContacts }) => {\n// return (\n//   <ul className={styles.list}>\n//     {contacts.map(({ id, name, number }) => {\n//       return (\n//         <li className={styles.list__item} key={id}>\n//           {name}: {number}\n//           <button\n//             type=\"button\"\n//             className={styles.btn}\n//             onClick={() => onDeleteContacts(id)}\n//           >\n//             Delete\n//           </button>\n//         </li>\n//       );\n//     })}\n//   </ul>\n// );\n// };\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './style.module.scss';\n\nexport default function App() {\n  const [stateContacts, setStateContacts] = useState([]);\n  const [stateFilter, setStateFilter] = useState('');\n\n  useEffect(() => {\n    const savedContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(savedContacts);\n\n    if (parsedContacts) {\n      setStateContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(stateContacts));\n  }, [stateContacts]);\n\n  const addContact = data => {\n    data.id = nanoid();\n    setStateContacts(prevState => [...prevState, data]);\n  };\n\n  const deleteContacts = contactId => {\n    setStateContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = event => {\n    setStateFilter(event.target.value);\n  };\n\n  const getFilteredContacts = () => {\n    if (stateContacts) {\n      console.log(stateContacts);\n      return stateContacts.filter(contact =>\n        contact.name.toLowerCase().includes(stateFilter.toLowerCase()),\n      );\n    }\n  };\n\n  App.propTypes = {\n    stateContacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    stateFilter: PropTypes.string.isRequired,\n  };\n\n  return (\n    <Container>\n      <h1 className={styles.title__phonebook}>Phonebook</h1>\n      <ContactForm onSubmit={addContact} contacts={stateContacts} />\n      <h2 className={styles.title__contacts}>Contacts</h2>\n      <Filter value={stateFilter} onChange={changeFilter} />\n      <ContactList\n        contacts={getFilteredContacts()}\n        onDeleteContacts={deleteContacts}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"label\":\"ContactForm_label__3KgVy\",\"input\":\"ContactForm_input__3emgF\",\"btn\":\"ContactForm_btn__1BmbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"list__item\":\"ContactList_list__item__29IJl\",\"btn\":\"ContactList_btn__LjK5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__phonebook\":\"style_title__phonebook__3aFT2\",\"title__contacts\":\"style_title__contacts__2HUDu\"};"],"sourceRoot":""}